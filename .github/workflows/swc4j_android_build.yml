name: swc4j Build

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "**.md"
      - "docs/**"
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"

env:
  SWC4J_VERSION: 0.2.0

jobs:
  build_swc4j_lib:
    strategy:
      matrix:
        include:
          - image: ubuntu-latest
            os: android
            arch: x86
            clang_arch: i686
            clang_arch2: i386
            target_arch: i686
            target: i686-linux-android
            out: x86
            ext: .so
          - image: ubuntu-latest
            os: android
            arch: x86_64
            clang_arch: x86_64
            clang_arch2: x86_64
            target_arch: x86_64
            target: x86_64-linux-android
            out: x86_64
            ext: .so
          - image: ubuntu-latest
            os: android
            arch: armeabi-v7a
            clang_arch: armv7a
            clang_arch2: arm
            target_arch: arm
            target: armv7-linux-androideabi
            out: arm
            ext: .so
          - image: ubuntu-latest
            os: android
            arch: arm64-v8a
            clang_arch: aarch64
            clang_arch2: aarch64
            target_arch: aarch64
            target: aarch64-linux-android
            out: arm64
            ext: .so

    name: Build swc4j for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.image }}

    steps:

    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r24
        local-cache: false

    - name: Setup Rust
      # uses: actions-rust-lang/setup-rust-toolchain@v1
      # with:
      #   toolchain: stable
      run: |
        rustup target add ${{ matrix.target }}

    # - name: Setup Deno
    #   uses: denoland/setup-deno@v1
    #   with:
    #     deno-version: vx.x.x

    - name: Cargo Build and Test
      env:
        RUSTFLAGS: -Awarnings
      run: |
        export PATH=${PATH}:${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin
        export AR=llvm-ar
        export CC = ${{ matrix.clang_arch }}-linux-android24-clang
        export CXX = ${{ matrix.clang_arch }}-linux-android24-clang++
        export RUSTFLAGS="-L ${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/14.0.6/lib/linux/${{ matrix.clang_arch2 }} -L ${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/${{ matrix.target_arch }}-linux-android/24 -C target-feature=+crt-static"
        cd rust
        cargo build --release --target ${{ matrix.target }}
        deno run --allow-all ../scripts/ts/copy_swc4j_lib.ts -o ${{ matrix.os }} -a ${{ matrix.out }}

    - name: Setup JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 8

    - name: Build and Test
      run: |
        gradle build test generatePomFileForGeneratePomPublication --rerun-tasks --debug

    - name: Upload the Artifact
      uses: actions/upload-artifact@v4
      with:
        name: swc4j-${{ matrix.os }}-${{ matrix.arch }}-${{ env.SWC4J_VERSION }}
        path: |
          build/libs/swc4j-${{ env.SWC4J_VERSION }}.jar
          build/libs/swc4j-${{ env.SWC4J_VERSION }}.pom
